[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nlsnnebula"
version = "0.0.1"
description = "Nebula: A collection of dataframe transformers"
authors = [
  { name = "DSci Global Platform Support Team", email = "dscigps@nielsen.com" },
]
readme = "README.md"
requires-python = ">=3.9"
keywords = ["nielsen"]
classifiers = [
  "License :: OSI Approved :: Apache Software License",
]
license = { file = "LICENSE" }
dependencies = [
    "polars>=1.34.0",
    "pyspark==3.5.6",
    "pytest>=8.4.2",
    "pandas>=1.2.5",
    "setuptools>=80.9.0",
]

[project.urls]
Homepage = "http://www.nielsen.com"
Source = "https://github.com/nielsen-oss/nebula"

[dependency-groups]

dev = [
    "pre-commit>=4.3.0",
    "py-cpuinfo",
    "holidays>=0.26",
    "pyarrow"]

test = [
  "chispa",
  "coverage",
  "holiday>=0.26",
  "lxml",
  "numpy",
  "orjson",
  "pyarrow",
  "py-cpuinfo",
  "pytest",
  "pytest-cov",
  "pyyaml"
]

[tool.setuptools.packages.find]
include = ["nlsn", "nlsn.*"]
namespaces = true



# In your pyproject.toml

[tool.ruff]
# Set the line length, just like Black
line-length = 88
# Fix all fixable errors
fix = true

[tool.ruff.lint]
# Enable all the rule sets you were using before:
# E/F: pyflakes/pycodestyle (standard)
# I: isort
# D: pydocstyle
# PL: pylint
select = ["E", "F", "I", "D", "PL"]

# Ignore any specific rules you don't like
# ignore = ["D100", "PLR2004"]

# --- Pydocstyle configuration ---
[tool.ruff.lint.pydocstyle]
# This mimics using a config file for docstring convention
# Options: "google", "numpy", "pep257"
convention = "google"

# --- Pylint configuration ---
[tool.ruff.lint.pylint]
# Example: set max-args, just like in .pylintrc
max-args = 6


[tool.ruff.format]
# Use black-compatible formatting
quote-style = "double"
indent-style = "space"
